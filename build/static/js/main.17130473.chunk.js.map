{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onInputChange","e","target","value","setState","props","onSearchInput","type","placeholder","onChange","this","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterSwitch","statusClass","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","filteredItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"wWAEeA,G,MCCG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACtB,OACI,yBAAKC,UAAU,qBACX,yCACA,4BAAKF,EAAL,gBAAwBC,EAAxB,YCLGE,G,iNCGXC,MAAQ,CACJC,KAAM,I,EAGVC,cAAgB,SAACC,GACb,IAAMF,EAAOE,EAAEC,OAAOC,MACtB,EAAKC,SAAS,CAAEL,SAChB,EAAKM,MAAMC,cAAcP,I,wEAIzB,OACI,2BAAOQ,KAAK,OACJX,UAAU,4BACVY,YAAY,iBACZC,SAAUC,KAAKV,cACfG,MAAOO,KAAKZ,MAAMC,W,GAlBGY,c,QCD1BC,G,uLCGD,IAAD,EAE0EF,KAAKL,MAA5EQ,EAFH,EAEGA,MAAOC,EAFV,EAEUA,UAAWC,EAFrB,EAEqBA,kBAAmBC,EAFxC,EAEwCA,aAEzCC,EAAa,iBAUjB,OAdK,EAEsDtB,OAKvDsB,GAAc,SAPb,EAE4DC,YAS7DD,GAAc,cAId,0BAAMrB,UAAWqB,GACb,0BAAMrB,UAAU,uBACVuB,QAAUH,GACXH,GAGL,4BAAQN,KAAK,SACLX,UAAU,6CACVuB,QAAUJ,GAClB,uBAAGnB,UAAU,uBAGb,4BAAQW,KAAK,SACLX,UAAU,4CACVuB,QAASL,GACjB,uBAAGlB,UAAU,wB,GAhCae,cCD3BS,G,MCGE,SAAC,GAA6D,IAA1DC,EAAyD,EAAzDA,MAAOP,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,kBAAmBC,EAAoB,EAApBA,aAEhDM,EAAWD,EAAME,IAAI,SAACC,GAAU,IACvBC,EAAoBD,EAApBC,GAAOC,EADe,YACFF,EADE,QAE7B,OACI,wBAAIG,IAAKH,EAAKC,GAAI7B,UAAU,mBACxB,kBAAC,EAAD,iBACS8B,EADT,CAEIZ,UAAW,kBAAMA,EAAUW,IAC3BV,kBAAmB,kBAAMA,EAAkBU,IAC3CT,aAAc,kBAAMA,EAAaS,UAMrD,OACI,wBAAI7B,UAAU,wBACR0B,KCrBCM,G,iNCGXC,QAAU,CACN,CAACC,KAAM,MAAOjB,MAAO,OACrB,CAACiB,KAAM,SAAUjB,MAAO,UACxB,CAACiB,KAAM,OAAQjB,MAAO,S,wEAGhB,IAAD,EAE8BH,KAAKL,MAAhC0B,EAFH,EAEGA,OAAQC,EAFX,EAEWA,eAEVH,EAAUnB,KAAKmB,QAAQN,IAAI,YAAoB,IAAlBO,EAAiB,EAAjBA,KAAMjB,EAAW,EAAXA,MAE/BoB,EADWF,IAAWD,EACG,WAAa,wBAE5C,OACI,4BACQvB,KAAK,SACLX,UAAS,cAASqC,GAClBN,IAAKG,EACLX,QAAU,kBAAMa,EAAeF,KAClCjB,KAKb,OACI,yBAAKjB,UAAU,aACViC,O,GA7B6BlB,cCD/BuB,G,iNCGXpC,MAAQ,CACJe,MAAO,I,EAGXsB,cAAgB,SAAClC,GACb,EAAKG,SAAS,CACVS,MAAOZ,EAAEC,OAAOC,S,EAIxBiC,SAAW,SAACnC,GACRA,EAAEoC,iBACuB,KAArB,EAAKvC,MAAMe,QACf,EAAKR,MAAMiC,YAAY,EAAKxC,MAAMe,OAClC,EAAKT,SAAS,CACVS,MAAO,O,wEAKX,OACI,0BAAMjB,UAAU,uBACVwC,SAAU1B,KAAK0B,UACjB,2BACI7B,KAAK,OACLX,UAAU,qBACVa,SAAUC,KAAKyB,cACf3B,YAAY,wBACZL,MAAOO,KAAKZ,MAAMe,QAEtB,4BACIjB,UAAU,mCADd,iB,GAhCyBe,c,sOCD1B4B,E,2MCUXC,MAAQ,I,EAER1C,MAAQ,CACJ2C,SAAU,CACN,EAAKC,eAAe,CAAC7B,MAAO,eAAgBlB,MAAM,IAClD,EAAK+C,eAAe,CAAC7B,MAAO,mBAAoBK,WAAW,IAC3D,EAAKwB,eAAe,CAAC7B,MAAO,kBAEhCd,KAAM,GACNgC,OAAQ,O,EAYZY,WAAa,SAAClB,GAEV,EAAKrB,SAAS,YAAiB,IAAfqC,EAAc,EAAdA,SACNG,EAAMH,EAASI,UAAU,SAACC,GAAD,OAAQA,EAAGrB,KAAOA,IAOjD,MAAO,CACHgB,SANU,sBACPA,EAASM,MAAM,EAAGH,IADX,YAEPH,EAASM,MAAMH,EAAM,S,EASpCI,QAAU,SAACnC,GAEP,IAAMoC,EAAU,EAAKP,eAAe,CAAC7B,UAErC,EAAKT,SAAS,YAAiB,IAAfqC,EAAc,EAAdA,SAGZ,MAAO,CACHA,SAHU,sBAAOA,GAAP,CAAiBQ,Q,EAQvC3C,cAAgB,SAACP,GACb,EAAKK,SAAS,CAACL,U,EAGnBiC,eAAiB,SAACD,GACd,EAAK3B,SAAS,CAAC2B,Y,EAkBnBhB,kBAAoB,SAACU,GAEjB,EAAKrB,SAAS,YAAiB,IAAfqC,EAAc,EAAdA,SACZ,MAAO,CACHA,SAAU,EAAKS,eAAeT,EAAUhB,EAAI,iB,EAKxDT,aAAe,SAACS,GAEZ,EAAKrB,SAAS,YAAiB,IAAfqC,EAAc,EAAdA,SACZ,MAAO,CACHA,SAAU,EAAKS,eAAeT,EAAUhB,EAAI,Y,iFA1ED,IAAtCZ,EAAqC,EAArCA,MAAqC,IAA9BK,iBAA8B,aAAbvB,KACrC,MAAO,CACHkB,QACAK,YACAvB,UAJ8C,SAK9C8B,GAAIf,KAAK8B,W,qCAyCFW,EAAK1B,EAAI2B,GAEhB,IAAMR,EAAMO,EAAIN,UAAU,SAACC,GAAD,OAAQA,EAAGrB,KAAOA,IACtC4B,EAAUF,EAAIP,GACdK,E,qVAAO,IACNI,EADM,eAERD,GAAYC,EAAQD,KAEzB,MAAM,GAAN,mBACOD,EAAIJ,MAAM,EAAGH,IADpB,CAEIK,GAFJ,YAGOE,EAAIJ,MAAMH,EAAM,O,6BAsBxBU,EAAOvD,GACV,OAAoB,IAAhBA,EAAKwD,OACED,EAEJA,EAAMvB,OAAO,SAACP,GACjB,OAAOA,EAAKX,MACP2C,cACAC,QAAQ1D,EAAKyD,gBAAkB,M,6BAIrCF,EAAOvB,GACV,OAAQA,GACJ,IAAK,MACD,OAAOuB,EACX,IAAK,SACD,OAAOA,EAAMvB,OAAO,SAACP,GAAD,OAAWA,EAAK7B,OACxC,IAAK,OACD,OAAO2D,EAAMvB,OAAO,SAACP,GAAD,OAAUA,EAAK7B,OACvC,QACI,OAAO2D,K,+BAIT,IAAD,EAE8B5C,KAAKZ,MAAhC2C,EAFH,EAEGA,SAAU1C,EAFb,EAEaA,KAAMgC,EAFnB,EAEmBA,OAClB2B,EAAgBhD,KAAKqB,OACvBrB,KAAKiD,OAAOlB,EAAU1C,GAAOgC,GAE3B6B,EAAYnB,EACGV,OAAO,SAACe,GAAD,OAAQA,EAAGnD,OAAM4D,OACvCM,EAAYpB,EAASc,OAASK,EAEpC,OACI,yBAAKhE,UAAU,YACX,kBAAC,EAAD,CAAWF,KAAQmE,EAAWlE,KAAQiE,IACtC,yBAAKhE,UAAU,oBACX,kBAAC,EAAD,CAAaU,cAAkBI,KAAKJ,gBACpC,kBAAC,EAAD,CACIyB,OAAWA,EACXC,eAAmBtB,KAAKsB,kBAEhC,kBAAC,EAAD,CACIX,MAAUqC,EACV5C,UAAcJ,KAAKiC,WACnB3B,aAAgBN,KAAKM,aACrBD,kBAAqBL,KAAKK,oBAC9B,kBAAC,EAAD,CAAauB,YAAgB5B,KAAKsC,e,GA7IjBrC,aCLjCmD,IAASC,OAAO,kBAAC,EAAD,MACZC,SAASC,eAAe,W","file":"static/js/main.17130473.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\nimport './search-panel.css'\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onInputChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchInput(term);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                    className=\"form-control search-input\"        \r\n                    placeholder=\"type to search\"\r\n                    onChange={this.onInputChange}\r\n                    value={this.state.term} />\r\n        );\r\n    }\r\n    \r\n};","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, {Component} from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render() {\r\n\r\n        const { label, onDeleted, onToggleImportant, onToggleDone, done, important } = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n        \r\n        return (\r\n            <span className={classNames}>\r\n                <span className=\"todo-list-item-label\"\r\n                      onClick={ onToggleDone } >\r\n                    {label}\r\n                </span>\r\n    \r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-success btn-sm float-right\"\r\n                        onClick={ onToggleImportant }>\r\n                <i className=\"fa fa-exclamation\"/>\r\n                </button>\r\n    \r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-danger btn-sm float-right\"\r\n                        onClick={onDeleted}>\r\n                <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n            </span>\r\n        );\r\n    };\r\n}","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ( { todos, onDeleted, onToggleImportant, onToggleDone } ) => {\r\n\r\n    const elements = todos.map((item) => {\r\n            const {id, ...itemProps} = item;\r\n            return (\r\n                <li key={item.id} className=\"list-group-item\">\r\n                    <TodoListItem\r\n                        { ...itemProps }\r\n                        onDeleted={() => onDeleted(id)}\r\n                        onToggleImportant={() => onToggleImportant(id)}\r\n                        onToggleDone={() => onToggleDone(id)}\r\n                        />\r\n                </li>\r\n            );\r\n        });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ];\r\n\r\n    render() {\r\n\r\n        const { filter, onFilterSwitch } = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const statusClass = isActive ? \"btn-info\" : \"btn-outline-secondary\";\r\n\r\n            return (\r\n                <button\r\n                        type=\"button\"\r\n                        className={`btn ${statusClass}`}\r\n                        key={name}\r\n                        onClick={ () => onFilterSwitch(name) }>\r\n                    {label}\r\n                </button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    };\r\n}","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.label === '') return;\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                  onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control col-9\"\r\n                    onChange={this.onLabelChange}\r\n                    placeholder=\"What needs to be done\"\r\n                    value={this.state.label} />\r\n\r\n                <button\r\n                    className=\"btn btn-outline-secondary col-3\">\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem({label: 'Drink coffee', done: true}),\r\n            this.createTodoItem({label: 'Make Awesome App', important: true}),\r\n            this.createTodoItem({label: 'Have a lunch'})\r\n        ],\r\n        term: '',\r\n        filter: 'all' // all, active, done\r\n    };\r\n\r\n    createTodoItem({ label, important=false, done=false}) {\r\n        return {\r\n            label,\r\n            important,\r\n            done,\r\n            id: this.maxId++,\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        \r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (label) => {\r\n\r\n        const newItem = this.createTodoItem({label});\r\n\r\n        this.setState(({todoData}) => {\r\n            const newArray = [...todoData, newItem];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    onSearchInput = (term) => {\r\n        this.setState({term});\r\n    };\r\n\r\n    onFilterSwitch = (filter) => {\r\n        this.setState({filter});\r\n    }\r\n\r\n    toggleProperty(arr, id, propName) {\r\n\r\n            const idx = arr.findIndex((el) => el.id === id);\r\n            const oldItem = arr[idx];\r\n            const newItem = {\r\n                ...oldItem,\r\n                [propName]: !oldItem[propName]\r\n            };\r\n            return [\r\n                ...arr.slice(0, idx),\r\n                newItem,\r\n                ...arr.slice(idx + 1)\r\n            ];\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        });\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        });\r\n    };\r\n\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label\r\n                .toLowerCase()\r\n                .indexOf(term.toLowerCase()) > -1;  \r\n        });\r\n    };\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const { todoData, term, filter } = this.state;\r\n        const filteredItems = this.filter(\r\n            this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData\r\n                            .filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">\r\n                <AppHeader toDo = {todoCount} done = {doneCount}/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel onSearchInput = { this.onSearchInput }/>\r\n                    <ItemStatusFilter\r\n                        filter = { filter }\r\n                        onFilterSwitch = { this.onFilterSwitch }/>\r\n                </div>\r\n                <TodoList\r\n                    todos = { filteredItems }\r\n                    onDeleted = { this.deleteItem }\r\n                    onToggleDone = {this.onToggleDone}\r\n                    onToggleImportant = {this.onToggleImportant}/>\r\n                <ItemAddForm onItemAdded = { this.addItem }/>\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n    document.getElementById('root'));\n\n"],"sourceRoot":""}